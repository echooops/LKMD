* Linux 内核数据结构
** 数据结构的选择
   - 原则一：遍历操作为主时，优先考虑链表；（没有数据结构能提供比线性算法复杂度更好的算法去遍历元素）
   - 原则二：排除性能因素，当需要相对较少数据项时，优先考虑链表；
   - 原则三：当需要与其它选择链表的代码交互时，优先考虑链表；
   - 原则四：需要大小不明的数据集合，优先选择链表；
   - 原则五：代码架构复合"生产者/消费者"模式，优先选择队列；
   - 原则六：当需要一个定长的缓冲，选择队列；
   - 原则七：如果需要映射一个UID到一个对象，选择映射；
   - 原则八：如果需要存储大量数据，并且快速检索，选择红黑树；

** 链表（list）
*** 相关资料
    [[http://blog.jobbole.com/87687/][Linux 内核数据结构：双向链表]]

** 队列（fifo）
*** 相关资料
    [[https://www.cnblogs.com/Anker/p/3481373.html][linux内核数据结构之kfifo]]

    [[https://www.webfalse.com/article/2640075.html][内核数据结构-----队列kfifo.h （4.0.8）较新的内核版本]]

** 映射
*** 相关资料

** 红黑树 (rbtree)
*** 相关资料
    [[https://blog.csdn.net/cwcmcw/article/details/17174891][Linux红黑树]]

** 基数树（radix tree）
*** 相关资料
    [[http://blog.jobbole.com/87675/][Linux 内核数据结构：Radix 树]]

** 位图 (bitmap)
*** 相关资料
    [[http://blog.jobbole.com/108527/][Linux 内核数据结构：位图（Bitmap）]]

